<Window x:Name="_this" x:Class="JKWatcher.ConnectedServerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        DataContext="{Binding ElementName=_this}"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JKWatcher"
        xmlns:jkclient="clr-namespace:JKClient;assembly=JKClient"
        mc:Ignorable="d"
        Title="ConnectedServerWindow" Height="450" Width="800">
    <Window.Resources>
        <local:Q3StringToPlaintextConverter x:Key="q3StringToPlaintextConverter"></local:Q3StringToPlaintextConverter>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="2*"></RowDefinition>
        </Grid.RowDefinitions>
        <DockPanel Grid.RowSpan="2">
            <WrapPanel DockPanel.Dock="Top">
                <Button x:Name="followBtn" Click="followBtn_Click" IsEnabled="False">Follow</Button>
            </WrapPanel>
            <DataGrid  IsReadOnly="True" CanUserAddRows="False" DockPanel.Dock="Bottom" x:Name="playerListDataGrid" AutoGenerateColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" SelectionChanged="playerListDataGrid_SelectionChanged">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding team}">
                                <DataTrigger.Value>
                                    <jkclient:Team>Free</jkclient:Team>
                                </DataTrigger.Value>
                                <Setter Property="Background" Value="LightGreen"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding team}">
                                <DataTrigger.Value>
                                    <jkclient:Team>Red</jkclient:Team>
                                </DataTrigger.Value>
                                <Setter Property="Background" Value="PaleVioletRed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding team}">
                                <DataTrigger.Value>
                                    <jkclient:Team>Blue</jkclient:Team>
                                </DataTrigger.Value>
                                <Setter Property="Background" Value="LightBlue"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding team}">
                                <DataTrigger.Value>
                                    <jkclient:Team>Spectator</jkclient:Team>
                                </DataTrigger.Value>
                                <Setter Property="Background" Value="LightYellow"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding infoValid}" Value="False">
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding infoValid}" Value="True">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="cN" Binding="{Binding clientNum}" Width="30"></DataGridTextColumn>
                    <DataGridTextColumn Header="Name" Binding="{Binding name,Converter={StaticResource q3StringToPlaintextConverter}}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Team" Binding="{Binding team}"></DataGridTextColumn>
                </DataGrid.Columns>

            </DataGrid>
        </DockPanel>
        <DockPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3">
            <WrapPanel DockPanel.Dock="Bottom" Height="30">
                <TextBox x:Name="commandLine" MinWidth="350"></TextBox>
                <Button x:Name="commandSendBtn" Click="commandSendBtn_Click" IsEnabled="False">Execute</Button>
                <Button x:Name="msgSendBtn" Click="msgSendBtn_Click" IsEnabled="False">S</Button>
                <Button x:Name="msgSendTeamBtn" Click="msgSendTeamBtn_Click" IsEnabled="False">T</Button>
                <Button x:Name="msgSendPlayerBtn" Click="msgSendPlayerBtn_Click" IsEnabled="False">P</Button>
                <Label>Verbosity level:</Label>
                <ComboBox x:Name="verbosityComboBox" SelectionChanged="verbosityComboBox_SelectionChanged">
                    <ComboBoxItem Content="zero" Tag="0"></ComboBoxItem>
                    <ComboBoxItem Content="one" Tag="1"></ComboBoxItem>
                    <ComboBoxItem Content="two" Tag="2"></ComboBoxItem>
                    <ComboBoxItem Content="three" Tag="3"></ComboBoxItem>
                    <ComboBoxItem Content="four" Tag="4"></ComboBoxItem>
                    <ComboBoxItem Content="five" Tag="5" IsSelected="True"></ComboBoxItem>
                </ComboBox>
                <!--<CheckBox x:Name="verboseOutputCheck" Checked="verboseOutputCheck_Checked" Unchecked="verboseOutputCheck_Unchecked">Verbose output</CheckBox>-->
            </WrapPanel>
            <TabControl>
                <TabItem>
                    <TabItem.Header>
                        <WrapPanel>
                            <Label>Colored</Label>
                            <CheckBox x:Name="coloredLogCheck" IsChecked="{Binding LogColoredEnabled}"></CheckBox>
                        </WrapPanel>
                    </TabItem.Header>
                    <ScrollViewer DockPanel.Dock="Top" local:AutoScrollBehavior.AutoScroll="True">
                        <TextBlock x:Name="logTxt" Foreground="White" Background="Black" TextWrapping="Wrap" FontFamily="Courier New">
                    
                    <Run Foreground="Blue" Background="Yellow">ipsum</Run> dolor sit amet, 
                    consectetur adipiscing elit. Donec a velit id turpis <Run Foreground="White" Background="White">maximus tincidunt</Run> vitae in dolor. Suspendisse ullamcorper fermentum rutrum. In metus orci, scelerisque dapibus venenatis gravida, euismod et odio. Cras eget imperdiet velit. Quisque id dolor elit. Nunc at lectus id leo mollis condimentum sed id turpis. Sed lacinia felis eu nisi condimentum, a efficitur nisl auctor. Phasellus mattis molestie finibus. Maecenas lacinia, urna sed dignissim semper, justo felis mattis sapien, ut tempus dolor tellus in urna. Cras posuere turpis eu dui cursus, vitae ultrices neque rhoncus. Proin vel dignissim dolor. Suspendisse non fringilla justo. Aliquam id sollicitudin magna, vel laoreet ante. Aliquam mollis congue orci eget ullamcorper.</TextBlock>
                    </ScrollViewer>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <WrapPanel>
                            <Label>Plain</Label>
                            <CheckBox x:Name="plainLogCheck" IsChecked="{Binding LogPlainEnabled}"></CheckBox>
                        </WrapPanel>
                    </TabItem.Header>
                    <ScrollViewer DockPanel.Dock="Top" local:AutoScrollBehavior.AutoScroll="True">
                        <TextBlock x:Name="logTxtPlain" TextWrapping="Wrap" FontFamily="Courier New">
                            ipsum dolor sit amet, consectetur adipiscing elit. Donec a velit id turpis maximus tincidunt vitae in dolor. Suspendisse ullamcorper fermentum rutrum. In metus orci, scelerisque dapibus venenatis gravida, euismod et odio. Cras eget imperdiet velit. Quisque id dolor elit. Nunc at lectus id leo mollis condimentum sed id turpis. Sed lacinia felis eu nisi condimentum, a efficitur nisl auctor. Phasellus mattis molestie finibus. Maecenas lacinia, urna sed dignissim semper, justo felis mattis sapien, ut tempus dolor tellus in urna. Cras posuere turpis eu dui cursus, vitae ultrices neque rhoncus. Proin vel dignissim dolor. Suspendisse non fringilla justo. Aliquam id sollicitudin magna, vel laoreet ante. Aliquam mollis congue orci eget ullamcorper.
                        </TextBlock>
                    </ScrollViewer>
                </TabItem>
            </TabControl>
                    
        </DockPanel>
        <DockPanel Grid.Column="1">

            <WrapPanel DockPanel.Dock="Top">
                <Button x:Name="recordBtn" Click="recordBtn_Click" IsEnabled="False">Record</Button>
                <Button x:Name="stopRecordBtn" Click="stopRecordBtn_Click" IsEnabled="False">Stop recording</Button>
                <TextBox x:Name="gameTimeTxt" IsReadOnly="True" MinWidth="30" Text="{Binding GameTime,Mode=OneWay}"></TextBox>
            </WrapPanel>
            <DataGrid  IsReadOnly="True" CanUserAddRows="False" DockPanel.Dock="Bottom" x:Name="connectionsDataGrid" AutoGenerateColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" SelectionChanged="connectionsDataGrid_SelectionChanged">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="cN" Binding="{Binding ClientNum}" Width="25"></DataGridTextColumn>
                    <DataGridTextColumn Header="psCN" Binding="{Binding SpectatedPlayer}" Width="30"></DataGridTextColumn>
                    <DataGridTextColumn Header="Rec" Binding="{Binding isRecordingADemo}" Width="30"></DataGridTextColumn>
                    <DataGridTextColumn Header="Status" Binding="{Binding Status}"></DataGridTextColumn>
                    <DataGridTextColumn Header="CamOp" Binding="{Binding CameraOperator}" Width="50"></DataGridTextColumn>
                    <DataGridTextColumn Header="Index" Binding="{Binding Index}"></DataGridTextColumn>
                </DataGrid.Columns>

            </DataGrid>
        </DockPanel>
        <DockPanel Grid.Column="2">
            <DockPanel DockPanel.Dock="Bottom">
                <WrapPanel DockPanel.Dock="Top">
                    <Button x:Name="addCtfWatcherBtn" Click="addCtfWatcherBtn_Click">Add CTF watcher</Button>
                    <Button x:Name="deleteWatcherBtn" Click="deleteWatcherBtn_Click" IsEnabled="True">Delete</Button>
                </WrapPanel>
                <DataGrid  IsReadOnly="True" DockPanel.Dock="Bottom" x:Name="cameraOperatorsDataGrid" AutoGenerateColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" SelectionChanged="cameraOperatorsDataGrid_SelectionChanged" CanUserAddRows="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Index" Binding="{Binding Index}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Type" Binding="{Binding Type}"></DataGridTextColumn>
                    </DataGrid.Columns>

                </DataGrid>
            </DockPanel>
            
        </DockPanel>
        <DockPanel x:Name="miniMapContainer" Grid.Column="3" Grid.Row="0" LastChildFill="True">
            <Image x:Name="miniMap" Stretch="Fill" DockPanel.Dock="Left" VerticalAlignment="Center"></Image>
        </DockPanel>
    </Grid>
</Window>
